services:
  portwatcher:
    build: .
    container_name: portwatcher
    tty: true
    environment:
      - SCAN_INTERVAL=${SCAN_INTERVAL:-2}
      - BURST_SCANS=${BURST_SCANS:-1}
      - BURST_DELAY=${BURST_DELAY:-0.05}
      - VERBOSE_LSOF=${VERBOSE_LSOF:-0}
      - USE_PROC=${USE_PROC:-0}
      - CLOSE_GRACE_MS=${CLOSE_GRACE_MS:-0}
      - SNAPSHOT_PATH=${SNAPSHOT_PATH:-/dev/shm/portwatcher.snapshot}
      - LISTENER_URL=${LISTENER_URL:-http://listner-api:8080/ingest}
      - WATCH_PORTS=${WATCH_PORTS:-}
      - DESIRED_PORTS=${DESIRED_PORTS:-}
      # To watch only specific ports, set one of the following (examples):
      # - WATCH_PORTS=80 443,3000-3005
      # - DESIRED_PORTS=5000-5002 7001
    ports:
      - "3000:3000"

  ebpf-portwatcher:
    build:
      context: ./ebpf
      dockerfile: Dockerfile
      args:
        INSTALL_TRACEE: ${INSTALL_TRACEE:-0}
    container_name: ebpf-portwatcher
    tty: true
    # eBPF requires privileged or CAP_BPF & related caps depending on kernel
    privileged: true
    pid: host
    environment:
      - TRACE_EBPF_EVENTS=${TRACE_EBPF_EVENTS:-bind,close}
      - TRACEE_ARGS=${TRACEE_ARGS:-}
      - EBPF_FALLBACK=${EBPF_FALLBACK:-1}
      - EBPF_FORCE_FALLBACK=${EBPF_FORCE_FALLBACK:-0}
      - LISTENER_URL=${LISTENER_URL:-http://listner-api:8080/ingest}
      - WATCH_PORTS=${WATCH_PORTS:-}
      - DESIRED_PORTS=${DESIRED_PORTS:-}
      # To watch only specific ports, set one of the following (examples):
      # - WATCH_PORTS=80 443,3000-3005
      # - DESIRED_PORTS=5000-5002 7001
    volumes:
      - /lib/modules:/lib/modules:ro
      - /usr/src:/usr/src:ro
      - /sys/kernel/debug:/sys/kernel/debug
      - /sys/fs/bpf:/sys/fs/bpf
      - /etc/os-release:/etc/os-release-host:ro

  listner-api:
    build:
      context: ./listner-api
      dockerfile: Dockerfile
    container_name: listner-api
    environment:
      - LOG_FILE=/logs/portwatcher.log
      - PORT=8080
    volumes:
      - listner_logs:/logs
    ports:
      - "8080:8080"

  nodejs-tester:
    build:
      context: .
      dockerfile: nodejs-tester/Dockerfile
    container_name: nodejs-tester
    depends_on:
      - listner-api
    environment:
      - LISTENER_URL=http://listner-api:8080/ingest
      - WATCH_PORTS=${WATCH_PORTS:-}
      - DESIRED_PORTS=${DESIRED_PORTS:-}
      # Optional: restrict to a set of ports inside this container
      # - WATCH_PORTS=3000 5000-5002
      # - DESIRED_PORTS=7001

  python-tester:
    build:
      context: .
      dockerfile: python-tester/Dockerfile
    container_name: python-tester
    depends_on:
      - listner-api
    environment:
      - LISTENER_URL=http://listner-api:8080/ingest
      - WATCH_PORTS=${WATCH_PORTS:-}
      - DESIRED_PORTS=${DESIRED_PORTS:-}
      # Optional: restrict to a set of ports inside this container
      # - WATCH_PORTS=3000 5000-5002
      # - DESIRED_PORTS=7002

volumes:
  listner_logs:


